---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: meshrr-mirkwood
  namespace: metallb
spec:
  addresses:
  - 172.19.2.1/32
  - 172.19.2.2/32
  autoAssign: false
---
apiVersion: metallb.io/v1beta1
kind: BGPAdvertisement
metadata:
  name: meshrr-mirkwood
  namespace: metallb
spec:
  ipAddressPools:
  - meshrr-mirkwood
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: meshrr-mirkwood-a
  selfLink: /api/v1/namespaces/default/services/meshrr-mirkwood-a
  annotations:
    metallb.universe.tf/address-pool: meshrr-mirkwood
spec:
  ports:
  - name: bgp
    port: 179
    protocol: TCP
    targetPort: bgp
  selector:
    app: meshrr
    meshrr_region_mirkwood: "true"
    redundancy_group: a
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: 172.19.2.1
  externalTrafficPolicy: Local
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: meshrr-mirkwood-b
  selfLink: /api/v1/namespaces/default/services/meshrr-mirkwood-b
  annotations:
    metallb.universe.tf/address-pool: meshrr-mirkwood
spec:
  ports:
  - name: bgp
    port: 179
    protocol: TCP
    targetPort: bgp
  selector:
    app: meshrr
    meshrr_region_mirkwood: "true"
    redundancy_group: b
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: 172.19.2.2
  externalTrafficPolicy: Local
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: meshrr-mirkwood
  selfLink: /api/v1/namespaces/default/services/meshrr-mirkwood
spec:
  clusterIP: None
  ports:
  - name: bgp
    port: 179
    protocol: TCP
    targetPort: bgp
  selector:
    app: meshrr
    meshrr_region_mirkwood: "true"
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: meshrr-mirkwood-a
  labels:
    app: meshrr
    meshrr_region_mirkwood: "true"
    redundancy_group: a
spec:
  selector:
    matchLabels:
      app: meshrr
  minReadySeconds: 5
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: meshrr
        meshrr_region_mirkwood: "true"
        redundancy_group: a
    spec:
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          emptyDir: {}
        - name: ssh-id
          emptyDir: {}
        - configMap:
            defaultMode: 256
            items:
            - key: config
              mode: 256
              path: juniper.conf.j2
            name: mirkwood-config
            optional: false
          name: override-config
      initContainers:
        - name: meshrr-init
          image: ghcr.io/juniper/meshrr:v0.2
          imagePullPolicy: IfNotPresent
          args: ["init"]
          volumeMounts:
            - name: ssh-id
              mountPath: /secret/ssh/
            - name: config
              mountPath: /config/
            - mountPath: /opt/meshrr/overrides/juniper.conf.j2
              name: override-config
              readOnly: true
              subPath: juniper.conf.j2
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: crpd-license
                  key: crpd-license
            - name: AUTONOMOUS_SYSTEM
              value: '65000'
            - name: ENCRYPTED_ROOT_PW
              value: >-
                $6$4XN/d$QdZrrRZNL2MtGXqKuZ/mr1S5tH46eyBKTKeWGVugxfqCGjKKqH2LhP8yNoqfYwVNvc0xsd0JSl6s9epsSPB7M1
            - name: MESH_SERVICE_NAME
              value: meshrr-mirkwood
            - name: UPSTREAM_SERVICE_NAME
              value: meshrr-core
            - name: MESHRR_CLIENTRANGE
              value: 0/0
      containers:
        - name: crpd
          image: localhost/juniper/crpd:23.2R1.13
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: bgp
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: bgp
            timeoutSeconds: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - name: bgp
              containerPort: 179
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config/
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            runAsNonRoot: false
        - name: meshrr
          image: ghcr.io/juniper/meshrr:v0.2
          imagePullPolicy: IfNotPresent
          args: ["sidecar"]
          startupProbe:
            exec:
              command:
              - cat
              - /tmp/connected-to-crpd
            initialDelaySeconds: 5
            periodSeconds: 3
          volumeMounts:
            - name: ssh-id
              mountPath: /secret/ssh/
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MESH_SERVICE_NAME
              value: meshrr-mirkwood
            - name: UPSTREAM_SERVICE_NAME
              value: meshrr-core
            - name: MESHRR_CLIENTRANGE
              value: 0/0
      imagePullSecrets:
        - name: regcred
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: redundancy_group
                    operator: In
                    values:
                      - a
                  - key: meshrr_region_mirkwood
                    operator: In
                    values:
                      - "true"

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: meshrr-mirkwood-b
  labels:
    app: meshrr
    meshrr_region_mirkwood: "true"
    redundancy_group: b
spec:
  selector:
    matchLabels:
      app: meshrr
  minReadySeconds: 5
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: meshrr
        meshrr_region_mirkwood: "true"
        redundancy_group: b
    spec:
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          emptyDir: {}
        - name: ssh-id
          emptyDir: {}
        - configMap:
            defaultMode: 256
            items:
            - key: config
              mode: 256
              path: juniper.conf.j2
            name: mirkwood-config
            optional: false
          name: override-config
      initContainers:
        - name: meshrr-init
          image: ghcr.io/juniper/meshrr:v0.2
          imagePullPolicy: IfNotPresent
          args: ["init"]
          volumeMounts:
            - name: ssh-id
              mountPath: /secret/ssh/
            - name: config
              mountPath: /config/
            - mountPath: /opt/meshrr/overrides/juniper.conf.j2
              name: override-config
              readOnly: true
              subPath: juniper.conf.j2
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: crpd-license
                  key: crpd-license
            - name: AUTONOMOUS_SYSTEM
              value: '65000'
            - name: ENCRYPTED_ROOT_PW
              value: >-
                $6$4XN/d$QdZrrRZNL2MtGXqKuZ/mr1S5tH46eyBKTKeWGVugxfqCGjKKqH2LhP8yNoqfYwVNvc0xsd0JSl6s9epsSPB7M1
            - name: MESH_SERVICE_NAME
              value: meshrr-mirkwood
            - name: UPSTREAM_SERVICE_NAME
              value: meshrr-core
            - name: MESHRR_CLIENTRANGE
              value: 0/0
      containers:
        - name: crpd
          image: localhost/juniper/crpd:23.2R1.13
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: bgp
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: bgp
            timeoutSeconds: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - name: bgp
              containerPort: 179
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config/
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            runAsNonRoot: false
        - name: meshrr
          image: ghcr.io/juniper/meshrr:v0.2
          imagePullPolicy: IfNotPresent
          args: ["sidecar"]
          startupProbe:
            exec:
              command:
              - cat
              - /tmp/connected-to-crpd
            initialDelaySeconds: 5
            periodSeconds: 3
          volumeMounts:
            - name: ssh-id
              mountPath: /secret/ssh/
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MESH_SERVICE_NAME
              value: meshrr-mirkwood
            - name: UPSTREAM_SERVICE_NAME
              value: meshrr-core
            - name: MESHRR_CLIENTRANGE
              value: 0/0
      imagePullSecrets:
        - name: regcred
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: redundancy_group
                    operator: In
                    values:
                      - b
                  - key: meshrr_region_mirkwood
                    operator: In
                    values:
                      - "true"