---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: routeserver-2-a
  namespace: metallb
spec:
  addresses:
  - 10.0.0.3/32
  autoAssign: false
---
apiVersion: metallb.io/v1beta1
kind: BGPAdvertisement
metadata:
  name: routeserver-2-a
  namespace: metallb
spec:
  ipAddressPools:
  - routeserver-2-a
  communities:
  - 65000:0
---
﻿apiVersion: v1
kind: Service
metadata:
  name: routeserver-2-a
  annotations:
    metallb.universe.tf/address-pool: routeserver-2-a
spec:
  ports:
  - name: bgp
    port: 179
    protocol: TCP
    targetPort: bgp
  selector:
    app: routeserver
    region: "2"
    side: a
  type: LoadBalancer
  externalTrafficPolicy: Local
---
﻿apiVersion: v1
kind: Service
metadata:
  name: routeserver-2-a-0-mgt
  annotations:
    metallb.universe.tf/address-pool: routeserver-mgt
spec:
  ports:
  - name: ssh
    port: 22
    protocol: TCP
    targetPort: ssh
  - name: netconf
    port: 830
    protocol: TCP
    targetPort: netconf
  selector:
    statefulset.kubernetes.io/pod-name: routeserver-2-a-0
  type: LoadBalancer
  loadBalancerIP: 192.168.18.5
  externalTrafficPolicy: Local
---
﻿apiVersion: v1
kind: Service
metadata:
  name: routeserver-2-a-1-mgt
  annotations:
    metallb.universe.tf/address-pool: routeserver-mgt
spec:
  ports:
  - name: ssh
    port: 22
    protocol: TCP
    targetPort: ssh
  - name: netconf
    port: 830
    protocol: TCP
    targetPort: netconf
  selector:
    statefulset.kubernetes.io/pod-name: routeserver-2-a-1
  type: LoadBalancer
  loadBalancerIP: 192.168.18.6
  externalTrafficPolicy: Local
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: routeserver-2-a
  labels:
    app: routeserver
    region: "2"
    side: a
spec:
  serviceName: routeserver
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      app: routeserver
      region: "2"
      side: a
  replicas: 1
  template:
    metadata:
      labels:
        app: routeserver
        region: "2"
        side: a
    spec:
      volumes:
        - name: crpd-license
          secret:
            secretName: crpd-license
            items:
              - key: junos_sfnt.lic
                path: junos_sfnt.lic
      containers:
        - name: crpd
          image: <registryURL>/meshrr:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: bgp
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 2
            tcpSocket:
              port: bgp
            timeoutSeconds: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - name: bgp
              containerPort: 179
              protocol: TCP
            - name: ssh
              containerPort: 22
              protocol: TCP
            - name: netconf
              containerPort: 830
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: AUTONOMOUS_SYSTEM
              value: '65000'
            - name: ENCRYPTED_ROOT_PW
              value: >-
                $6$4XN/d$QdZrrRZNL2MtGXqKuZ/mr1S5tH46eyBKTKeWGVugxfqCGjKKqH2LhP8yNoqfYwVNvc0xsd0JSl6s9epsSPB7M1
            - name: MESH_SERVICE_NAME
              value: meshrr-core
            - name: MESHRR_MODE
              value: routeserver
            - name: MESHRR_ASRANGE
              value: 65001-65535
            - name: MESHRR_CLIENTRANGE
              value: 10.0/16
            - name: MESHRR_FAMILY_EVPN
              value: "true"
            - name: MESHRR_FAMILY_INET
              value: "false"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: crpd-license
              mountPath: /config/license/safenet/
              subPath: ''
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            runAsNonRoot: false
      imagePullSecrets:
        - name: regcred
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: side
                    operator: In
                    values:
                      - "a"
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: region
                operator: In
                values:
                - "2"
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi

